---
backend:
  package: internal
  # TODO remove this, generate it somehow
  model_imports:
    - "from datetime import datetime, date"
datamodel:
  user:
    table: user
    primary_key: user_id
    description: User entity
    graphql:
    #   patch: true
    #   create: true
    #   delete: true
    #   update: true
    #   identifier: userId
      hierarchy:
        reviews:
          description: User's reviews
          relationship: reviews
          eager_load: true
          # as_list: True

    fields:
      # - name: name of database field
      #   type: field type
      #   nullable: true/false - defaults to false
      #   foreign_model: datamodel name e.g. user
      #   foreign_model_field: field name e.g. user_id
      - name: user_id
        type: integer
        description: User primary key
        can_create: false
        can_update: false
      - name: username
        type: string
        description: Username
        filters:
          eq: true
          ne: true
          like: true
          re: true
      - name: password
        type: string
      - name: created_at
        type: datetime
        default: datetime.utcnow
        can_create: false
        can_update: false
      - name: updated_at
        type: datetime
        default: datetime.utcnow
        onupdate: datetime.utcnow
        can_create: false
        can_update: false

    relationships:
      reviews:
        foreign_model: review
        foreign_model_field: user_id
        backref: user

  restaurant:
    table: restaurant
    primary_key: restaurant_id
    fields:
      - name: restaurant_id
        type: integer
        can_create: false
        can_update: false
        filters:
          lt: true
          gt: true
          lte: true
          gte: true
      - name: name
        type: string
      - name: address
        type: string
      - name: cuisine
        type: string
      - name: average_rating
        type: decimal
      - name: created_at
        type: datetime
        default: datetime.utcnow
        can_create: false
        can_update: false
      - name: updated_at
        type: datetime
        default: datetime.utcnow
        onupdate: datetime.utcnow
        can_create: false
        can_update: false

    graphql:
      hierarchy:
        reviews:
          relationship: reviews

    relationships:
      reviews:
        foreign_model: review
        foreign_model_field: restaurant_id
        backref: restaurant

  review:
    table: review
    primary_key: review_id
    fields:
      - name: review_id
        type: integer
        can_create: false
        can_update: false
      - name: restaurant_id
        type: integer
        foreign_model: restaurant
        foreign_model_field: restaurant_id
      - name: user_id
        type: integer
        foreign_model: user
        foreign_model_field: user_id
      - name: rating
        type: integer
      - name: visit_date
        type: date
      - name: comment
        type: integer
      - name: created_at
        type: datetime
        default: datetime.utcnow
        can_create: false
        can_update: false
      - name: updated_at
        type: datetime
        default: datetime.utcnow
        onupdate: datetime.utcnow
        can_create: false
        can_update: false

    graphql:
      hierarchy:
        # these are via backref
        user:
          description: User for review
          relationship: user
          eager_load: true
          as_list: false

        restaurant:
          description: Restaurant for review
          relationship: restaurant
          eager_load: true
          as_list: false

    indexes:
      review_restaurant_idx:
        fields:
          - restaurant_id


# relationships
# graphql fields
